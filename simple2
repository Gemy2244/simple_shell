#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#define MAX_LINE 128
#define MAX_ARGS 32

int main(int argc, char *argv[]) {
  char line[MAX_LINE];
  char *args[MAX_ARGS];
  int ret;

  // Display prompt
  printf("> ");

  while (fgets(line, sizeof(line), stdin)) {
    // Remove trailing newline
    strtok(line, "\n");

    // Check for end of file
    if (feof(stdin)) {
      printf("\n");
      break;
    }

    // Parse arguments
    int arg_count = 0;
    char *token = strtok(line, " ");
    while (token && arg_count < MAX_ARGS - 1) {
      args[arg_count++] = token;
      token = strtok(NULL, " ");
    }

    // Check for exceeding argument limit
    if (token) {
      printf("Error: too many arguments\n");
      continue;
    }

    args[arg_count] = NULL;

    // Fork a child process
    ret = fork();
    if (ret == -1) {
      perror("fork");
      exit(1);
    }

    if (ret == 0) {
      // Child process
      execvp(args[0], args);
      perror("execvp");
      exit(127);
    } else {
      // Parent process
      wait(NULL);
    }

    // Display prompt again
    printf("> ");
  }

  return 0;
}
